[
  {
    "department": "ACMA",
    "number": "336",
    "reason": "Ambiguity issue: The phrase \"normally be required\" introduces a degree of flexibility or conditionality that the schema does not support. The schema expects requirements to be stated as definitive conditions, whereas \"normally\" implies these conditions might be waived or are not strictly enforced in all cases. The specific text that causes the ambiguity is \"normally be required\".",
    "timestamp": "2025-07-04T05:19:01.447Z"
  },
  {
    "department": "APMA",
    "number": "995",
    "reason": "Ambiguity issue: - The schema does not support temporal constraints on when a prerequisite must be completed. The text \"Must be completed within first six terms of the program\" falls into this category.",
    "timestamp": "2025-07-04T05:19:03.739Z"
  },
  {
    "department": "ARCH",
    "number": "452",
    "reason": "Ambiguity issue: - The prerequisite statement contains both unclear language regarding logical grouping and contradictory information.\n\n1.  **Unclear Language:** The phrasing \"ARCH 373 or HSCI 321, HSCI 324, BPK 303, BPK 324, BPK 325, BPK 326\" is ambiguous. It is unclear whether ARCH 373 is an alternative to the entire group of other courses (i.e., `ARCH 373` OR (`HSCI 321` AND `HSCI 324` AND `BPK 303` AND `BPK 324` AND `BPK 325` AND `BPK 326`)) or an alternative to each individual course in the list (i.e., `ARCH 373` OR `HSCI 321` OR `HSCI 324` OR `BPK 303` OR `BPK 324` OR `BPK 325` OR `BPK 326`). The schema can represent both interpretations, but the source text does not provide sufficient clarity to determine the intended logic.\n\n2.  **Contradictory Statements:** The prerequisite section states \"ARCH 373 or ...\" which implies ARCH 373 is a required prerequisite (even if it's one of several options). However, it also states \"ARCH 373 is recommended.\" A course cannot be both a required prerequisite and merely recommended simultaneously.",
    "timestamp": "2025-07-04T05:19:46.399Z"
  },
  {
    "department": "BISC",
    "number": "100",
    "reason": "Ambiguity issue: - The \"Prerequisites\" field contains advisory text that is not a requirement for taking BISC 100. The schema's `prerequisite` field is designed to hold `RequirementNode`s, which represent actual requirements. This advisory statement cannot be mapped to any `RequirementNode` type, making the representation of the prerequisite requirement ambiguous because it includes non-requirement information.\n\nSpecifically, the text \"who are considering a BISC major, are encouraged to proceed directly to BISC 101 and 102\" cannot be represented within the `prerequisite` field.",
    "timestamp": "2025-07-04T05:20:03.335Z"
  },
  {
    "department": "BISC",
    "number": "171",
    "reason": "Ambiguity issue: - The schema does not support specifying a maximum number of units or \"fewer than\" a certain number of units. The text \"completion of fewer than 60 units\" cannot be unambiguously represented by the `creditCount` type, which only supports a minimum number of credits.",
    "timestamp": "2025-07-04T05:20:07.160Z"
  },
  {
    "department": "BISC",
    "number": "490",
    "reason": "Ambiguity issue: The requirements are ambiguous because they contain subjective, discretionary, and program-specific conditions that cannot be unambiguously translated into the schema's structured types. The schema is designed for concrete, rule-based requirements, not for conditions requiring human judgment, external program curriculum definitions, or vague quantifiers.\n\nSpecific text causing ambiguity:\n*   \"all lower division biological sciences courses\": The term \"all\" is not a specific count and is context-dependent, making it difficult to represent with `RequirementCourseCount` without further clarification.\n*   \"upper division BISC courses appropriate to the subject of the intended research as determined by the departmental undergraduate curriculum committee\": This requirement is subjective, depends on human judgment and specific research topics, and involves discretionary approval by a committee. Furthermore, the concept of \"appropriate to the subject\" is a form of equivalence or suitability that is not supported by the schema.\n*   \"all physics, chemistry and mathematics requirements for the major or honours program\": This refers to program-specific requirements that are not defined within the schema and vary depending on the student's declared major or honours program, creating an external dependency that cannot be directly encoded.",
    "timestamp": "2025-07-04T05:20:18.520Z"
  },
  {
    "department": "BISC",
    "number": "491",
    "reason": "Ambiguity issue: The schema cannot represent requirements phrased as \"all courses\" within a broad category or \"all requirements for a program\" without further specification of the courses or criteria. The specific text causing this ambiguity is: \"Completion of all lower division biological sciences courses\" and \"completion of all physics, chemistry and mathematics requirements for the major or honours program\".",
    "timestamp": "2025-07-04T05:20:26.360Z"
  },
  {
    "department": "BISC",
    "number": "492W",
    "reason": "Ambiguity issue: The requirements are not unambiguously representable due to the following:\n1.  **Subjectivity and External Determination**: The phrase \"upper division BISC courses appropriate to the subject of the intended research as determined by the departmental undergraduate curriculum committee\" introduces subjective criteria (\"appropriate to the subject\") and external decision-making processes (\"determined by the departmental undergraduate curriculum committee\") that the schema does not have fields to capture.\n2.  **Broad Programmatic Requirements**: The phrase \"completion of all physics, chemistry and mathematics requirements for the major or honours program\" refers to a broad set of program-specific requirements rather than specific courses or counts of courses, which the schema is not designed to represent.",
    "timestamp": "2025-07-04T05:20:37.222Z"
  },
  {
    "department": "BISC",
    "number": "497W",
    "reason": "Ambiguity issue: - The phrase \"Completion of lower division course requirements\" is too vague to be unambiguously represented by the schema. The schema requires specific details such as the number of courses, the department(s) involved, or specific course codes. The given text does not provide these specifics, making it impossible to map to types like `RequirementCourseCount` or `RequirementCourse` without making assumptions.",
    "timestamp": "2025-07-04T05:20:44.053Z"
  },
  {
    "department": "BISC",
    "number": "498",
    "reason": "Ambiguity issue: The phrase \"Completion of lower division course requirements\" is too vague to be unambiguously represented by the schema. The schema's `RequirementCourseCount` type, which is the closest fit, requires a specific `count` of courses and optionally `department` or `level`. The given text does not specify the number of lower division courses required, nor does it specify which departments or specific courses are included in these \"requirements.\" This lack of specificity prevents clear mapping to the schema's structured types.",
    "timestamp": "2025-07-04T05:20:51.292Z"
  },
  {
    "department": "BISC",
    "number": "499",
    "reason": "Ambiguity issue: - The phrase \"lower division course requirements\" is too vague to be unambiguously represented by the schema. The schema can handle specific course counts, departments, and levels (e.g., \"one lower division CMPT course\"), but \"lower division course requirements\" does not specify a count, a department, or a specific set of courses that can be parsed into the structured types like `RequirementCourseCount` or `RequirementCourse`. The specific text causing the ambiguity is \"lower division course requirements\".",
    "timestamp": "2025-07-04T05:20:58.150Z"
  },
  {
    "department": "BPK",
    "number": "105",
    "reason": "Ambiguity issue: The schema does not support representing information about what a course can be substituted for or used as an equivalent to, only requirements for taking the course.\n\"BPK 205 or 208 may be used as a substitute for BPK 105 by students in the kinesiology minor program.\"",
    "timestamp": "2025-07-04T05:21:10.937Z"
  },
  {
    "department": "BPK",
    "number": "143",
    "reason": "Ambiguity issue: The schema does not support representing requirements that state a course is mandatory for specific student groups based on their program and prior coursework. The text \"BPK major and honours students who have taken BPK 141 must also take BPK 143\" describes such a rule, which is not a prerequisite or corequisite for BPK 143 itself.",
    "timestamp": "2025-07-04T05:21:20.147Z"
  },
  {
    "department": "BPK",
    "number": "205",
    "reason": "Ambiguity issue: \"BPK 208 may not be used as a substitute for BPK 205 by students in the BPK Major and Honours programs. BPK Major and Honours students who have taken BPK 105 must also take BPK 205.\"\nThe schema does not support representing statements about non-equivalences, nor does it support applying rules or requirements conditionally based on program membership or prior course completion.",
    "timestamp": "2025-07-04T05:21:34.097Z"
  },
  {
    "department": "BPK",
    "number": "208",
    "reason": "Ambiguity issue: - The course requirements contain information that cannot be clearly and unambiguously represented by the provided schema.\n\nThe corequisite \"CHEM 180\" and the credit conflicts \"BPK 105\" and \"BPK 205\" are representable. However, the \"Notes\" section includes statements that fall outside the schema's specific types for prerequisites, corequisites, or credit conflicts:\n\n1.  \"BPK 208 may be used as a substitute for BPK 105 by students in the Kinesiology Minor program.\" This statement implies an equivalency or substitution. According to the \"Known data issues\", \"Equivalent courses are not supported,\" making this part of the requirement unrepresentable clearly.\n2.  \"BPK Major and Honours students may not receive credit for BPK 208.\" This describes a credit exclusion rule based on program status. The schema does not have a specific type for credit exclusions, meaning this rule cannot be clearly and unambiguously represented with a dedicated schema element, only as a generic note.",
    "timestamp": "2025-07-04T05:21:47.993Z"
  },
  {
    "department": "BPK",
    "number": "305",
    "reason": "Ambiguity issue: The schema does not support conditional requirements based on student attributes such as major. The text \"Majors from outside BPK require BPK 205 (or BISC 305), MBB 231 (or 201), MATH 155 (or 152) plus permission of the instructor.\" introduces such a condition, making the requirements not unambiguously representable.",
    "timestamp": "2025-07-04T05:21:55.954Z"
  },
  {
    "department": "BPK",
    "number": "306",
    "reason": "Ambiguity issue: The schema does not support conditional requirements based on student attributes. The text \"Majors from outside BPK require BPK 205 (or BISC 305), MBB 231 (or 201), MATH 155 (or 152) plus permission of the instructor.\" contains a conditional clause that cannot be represented.",
    "timestamp": "2025-07-04T05:22:07.079Z"
  },
  {
    "department": "BPK",
    "number": "307",
    "reason": "Ambiguity issue: The requirements cannot be unambiguously represented due to missing schema support for temporal restrictions and conditional logic based on student attributes.\n\nSpecifically, the clause \"students who took BPK 306 prior to Fall 2017, cannot take this course\" is not supported by the schema. This is a temporal restriction on a previously completed course, which is explicitly listed as a known data issue (\"any text that mentions completing a prerequisite during a specific semester is not supported\"). The schema does not have a mechanism to represent such negative, time-based conditions on corequisites.\n\nAdditionally, the clause \"Majors from outside BPK require BPK 205 (or BISC 305), MBB 231 (or 201), MATH 155 or 152 plus permission of the instructor\" introduces conditional prerequisites based on a student's major. The provided schema structure, with a single `prerequisite` field, does not allow for defining different prerequisite paths for different student cohorts (e.g., BPK majors vs. non-BPK majors).",
    "timestamp": "2025-07-04T05:22:20.456Z"
  },
  {
    "department": "BPK",
    "number": "326",
    "reason": "Ambiguity issue: . The schema does not support conditional requirements based on student program or major, nor conditional corequisites. The text \"Behavioral Neuroscience Major and Honours students require BPK 142, 205, PSYC 280 and at least 60 units.\" introduces an unrepresentable conditional prerequisite. Additionally, the note \"BPK major and honours students who have taken BPK 325 must also take BPK 326.\" describes a conditional corequisite that cannot be represented by the schema.",
    "timestamp": "2025-07-04T05:22:38.295Z"
  },
  {
    "department": "BPK",
    "number": "343",
    "reason": "Ambiguity issue: The requirements cannot be unambiguously represented due to the following reasons:\n\n1.  **Handling of Equivalent Courses**: The prerequisite text includes \"STAT 201 or an equivalent statistics course\". However, the provided \"Known data issues\" explicitly state that \"Equivalent courses are not supported\". This creates a direct conflict, making it impossible to represent this part of the requirement according to the given constraints.\n2.  **Conditional Requirements**: The note states, \"BPK major and honours students who have taken BPK 342 must also take BPK 343.\" This describes a requirement that is conditional on the student's major/honours status and prior course completion. The current schema does not support applying requirements based on specific student attributes (like major) or complex prior course history beyond the standard prerequisite/corequisite structure.",
    "timestamp": "2025-07-04T05:23:24.164Z"
  },
  {
    "department": "BPK",
    "number": "351",
    "reason": "Ambiguity issue: The requirements contain temporal conditions that are not supported by the schema. Specifically, the phrases \"at least two terms before co-op placement\" and \"by Week 1 of the term prior\" describe timing relative to other events, which is explicitly listed as unsupported in the \"Known data issues\".",
    "timestamp": "2025-07-04T05:23:32.820Z"
  },
  {
    "department": "BPK",
    "number": "448",
    "reason": "Ambiguity issue: The phrase \"or for biomedical engineering students, BPK 201 and 208\" introduces a conditional requirement based on the student's program of study. The provided schema does not support conditional logic where a set of requirements is dependent on a student's program (e.g., \"if student is in Biomedical Engineering, then...\"). The `RequirementProgram` type represents a direct requirement to be in a program, not a condition for other requirements.",
    "timestamp": "2025-07-04T05:24:33.759Z"
  },
  {
    "department": "BPK",
    "number": "491",
    "reason": "Ambiguity issue: A minimum grade of B in this course is needed to register in BPK 495 or BPK 499. The schema does not support representing post-requisites or progression requirements, which this statement describes. The `minGrade` field in `RequirementCourse` is intended for specifying the minimum grade required in a prerequisite course, not for defining a minimum grade in the current course that enables progression to other courses.",
    "timestamp": "2025-07-04T05:25:09.548Z"
  },
  {
    "department": "BPK",
    "number": "495",
    "reason": "Ambiguity issue: - The schema does not support temporal conditions for credit conflicts. The text \"prior to Fall 2016\" cannot be represented within the `ConflictEquivalentCourse` structure, which lacks fields for temporal qualifiers.",
    "timestamp": "2025-07-04T05:25:19.486Z"
  },
  {
    "department": "BPK",
    "number": "496",
    "reason": "Ambiguity issue: \"Usually, upper level standing with at least 75 units in the Biomedical Physiology and Kinesiology program will be required.\" The word \"Usually\" indicates that this is not a strict, mandatory requirement, which the schema is designed to represent. The schema does not have a mechanism to represent probabilistic or non-mandatory conditions. Additionally, \"upper level standing\" is a vague term not directly mappable to any specific schema type, as the schema's `level` attribute applies to specific course levels (e.g., '3XX') rather than a general state of academic standing.",
    "timestamp": "2025-07-04T05:25:30.299Z"
  },
  {
    "department": "BPK",
    "number": "498",
    "reason": "Ambiguity issue: The phrase \"Usually, upper level standing with at least 75 units in the Biomedical Physiology and Kinesiology program will be required\" introduces ambiguity. The word \"Usually\" indicates that this is not a strict, mandatory requirement, which cannot be represented by the schema's deterministic structure. Additionally, the term \"upper level standing\" is not defined within the schema, making it impossible to map unambiguously.\n\n\"Usually, upper level standing with at least 75 units in the Biomedical Physiology and Kinesiology program will be required.\"",
    "timestamp": "2025-07-04T05:25:38.150Z"
  },
  {
    "department": "BUS",
    "number": "100",
    "reason": "Ambiguity issue: - Missing schema support for temporal conditions. The schema does not provide fields to represent eligibility based on admission dates or cohorts.\nSpecific text causing ambiguity: \"in Fall 2022 and onward\"",
    "timestamp": "2025-07-04T05:25:47.001Z"
  },
  {
    "department": "BUS",
    "number": "201",
    "reason": "Ambiguity issue: The schema does not support representing restrictions based on a maximum number of accumulated units. The `RequirementCreditCount` type is designed for minimum credit prerequisites, not for conditions like \"more than 30 units\". This specific restriction cannot be clearly and unambiguously represented using the provided schema types.\n\nThe specific text causing the ambiguity is: \"Students with more than 30 units may not take this course.\"",
    "timestamp": "2025-07-04T05:27:46.109Z"
  },
  {
    "department": "BUS",
    "number": "202",
    "reason": "Ambiguity issue: - The schema does not provide a specific type to represent complex admission criteria based on major status and specific faculty admission pathways. The text \"This course is only open to approved business administration majors, joint majors, or second degree students admitted to the faculty through the Business Foundation Pathways - Transfer Pathway\" cannot be clearly and unambiguously parsed into the existing structured types like `RequirementProgram` or other specific requirement types. It would have to be relegated to a generic `note` field, meaning its structured representation is not supported.",
    "timestamp": "2025-07-04T05:27:53.977Z"
  },
  {
    "department": "BUS",
    "number": "203",
    "reason": "Ambiguity issue: - The text \"This course is only open to approved business administration majors admitted to the faculty through the BBA major - highschool or transfer stream in Fall 2022 and onward.\" contains information that cannot be represented by the schema. Specifically, the schema does not support specifying admission streams or cohorts (e.g., \"BBA major - highschool or transfer stream\") or temporal restrictions on eligibility (e.g., \"in Fall 2022 and onward\"). While the corequisite and credit conflict information is representable, the inability to fully represent the prerequisite makes the overall requirements ambiguous.",
    "timestamp": "2025-07-04T05:28:00.949Z"
  },
  {
    "department": "BUS",
    "number": "217W",
    "reason": "Ambiguity issue: - The schema does not support representing a corequisite that is tied to a specific alternative (OR branch) within a set of prerequisites. The schema only allows for a single, global corequisite requirement. The text \"45 units and corequisite: BUS 202\" implies that the corequisite BUS 202 is conditional on selecting the \"45 units\" prerequisite path, which cannot be unambiguously represented by the current schema structure.",
    "timestamp": "2025-07-04T05:28:15.525Z"
  },
  {
    "department": "BUS",
    "number": "300",
    "reason": "Ambiguity issue: - The schema does not support temporal restrictions on student admission status. The phrase \"admitted to the faculty in Fall 2022 and onward\" cannot be represented.",
    "timestamp": "2025-07-04T05:28:35.695Z"
  },
  {
    "department": "BUS",
    "number": "311",
    "reason": "Ambiguity issue: The schema does not support temporal conditions on program admission. The following text introduces such conditions: \"students admitted to the business administration minor between Fall 2012 - Summer 2016\" and \"students admitted to the business administration minor Fall 2016 - onwards\".",
    "timestamp": "2025-07-04T05:28:41.943Z"
  },
  {
    "department": "BUS",
    "number": "312",
    "reason": "Ambiguity issue: - The phrase \"both with a minimum grade of C- and 45 units\" is ambiguous. It is unclear whether the \"45 units\" requirement applies to the individual preceding courses/groups (which is not supported by the schema, as `RequirementCourse` does not have a unit requirement) or if it refers to a total of 45 units of university coursework (which is supported by `RequirementCreditCount`). The schema cannot unambiguously represent this requirement due to this phrasing.\n\nThe specific text that causes the ambiguity is: \"both with a minimum grade of C- and 45 units\"",
    "timestamp": "2025-07-04T05:28:54.861Z"
  },
  {
    "department": "BUS",
    "number": "315",
    "reason": "Ambiguity issue: **Validating Schema for Nested Logic**\n\nI'm confirming the schema's capacity to accurately represent the complex, nested AND/OR logic for BUS 315 prerequisites. My current focus is on correctly structuring the granular `minGrade` and `creditCount` requirements within the hierarchical `ALL_OF` and `ONE_OF` groups, ensuring all conditions are precisely mapped.\n\n\n**Validating Schema for Nested Logic**\n\nI'm confirming the schema's capacity to accurately represent the complex, nested AND/OR logic for BUS 315 prerequisites. My current focus is on correctly structuring the granular `minGrade` and `creditCount` requirements within the hierarchical `ALL_OF` and `ONE_OF` groups, ensuring all conditions are precisely mapped.\n\n\n**Validating Schema for Nested Logic**\n\nI'm confirming the schema's capacity to accurately represent the complex, nested AND/OR logic for BUS 315 prerequisites. My current focus is on correctly structuring the granular `minGrade` and `creditCount` requirements within the hierarchical `ALL_OF` and `ONE_OF` groups, ensuring all conditions are precisely mapped.\n\n\n**Validating Schema for Nested Logic**\n\nI'm confirming the schema's capacity to accurately represent the complex, nested AND/OR logic for BUS 315 prerequisites. My current focus is on correctly structuring the granular `minGrade` and `creditCount` requirements within the hierarchical `ALL_OF` and `ONE_OF` groups, ensuring all conditions are precisely mapped.\n\n\n**Validating Schema for Nested Logic**\n\nI'm confirming the schema's capacity to accurately represent the complex, nested AND/OR logic for BUS 315 prerequisites. My current focus is on correctly structuring the granular `minGrade` and `creditCount` requirements within the hierarchical `ALL_OF` and `ONE_OF` groups, ensuring all conditions are precisely mapped.\n\n\n**Validating Schema for Nested Logic**\n\nI'm confirming the schema's capacity to accurately represent the complex, nested AND/OR logic for BUS 315 prerequisites. My current focus is on correctly structuring the granular `minGrade` and `creditCount` requirements within the hierarchical `ALL_OF` and `ONE_OF` groups, ensuring all conditions are precisely mapped.\n\n\n**Validating Schema for Nested Logic**\n\nI'm confirming the schema's capacity to accurately represent the complex, nested AND/OR logic for BUS 315 prerequisites. My current focus is on correctly structuring the granular `minGrade` and `creditCount` requirements within the hierarchical `ALL_OF` and `ONE_OF` groups, ensuring all conditions are precisely mapped.\n\n\n**Validating Schema for Nested Logic**\n\nI'm confirming the schema's capacity to accurately represent the complex, nested AND/OR logic for BUS 315 prerequisites. My current focus is on correctly structuring the granular `minGrade` and `creditCount` requirements within the hierarchical `ALL_OF` and `ONE_OF` groups, ensuring all conditions are precisely mapped.\n\n\n**Validating Schema for Nested Logic**\n\nI'm confirming the schema's capacity to accurately represent the complex, nested AND/OR logic for BUS 315 prerequisites. My current focus is on correctly structuring the granular `minGrade` and `creditCount` requirements within the hierarchical `ALL_OF` and `ONE_OF` groups, ensuring all conditions are precisely mapped.\n\n\n**Validating Schema for Nested Logic**\n\nI'm confirming the schema's capacity to accurately represent the complex, nested AND/OR logic for BUS 315 prerequisites. My current focus is on correctly structuring the granular `minGrade` and `creditCount` requirements within the hierarchical `ALL_OF` and `ONE_OF` groups, ensuring all conditions are precisely mapped.\n\n\n**Validating Schema for Nested Logic**\n\nI'm confirming the schema's capacity to accurately represent the complex, nested AND/OR logic for BUS 315 prerequisites. My current focus is on correctly structuring the granular `minGrade` and `creditCount` requirements within the hierarchical `ALL_OF` and `ONE_OF` groups, ensuring all conditions are precisely mapped.\n\n\n**Validating Schema for Nested Logic**\n\nI'm confirming the schema's capacity to accurately represent the complex, nested AND/OR logic for BUS 315 prerequisites. My current focus is on correctly structuring the granular `minGrade` and `creditCount` requirements within the hierarchical `ALL_OF` and `ONE_OF` groups, ensuring all conditions are precisely mapped.\n\n\n**Validating Schema for Nested Logic**\n\nI'm confirming the schema's capacity to accurately represent the complex, nested AND/OR logic for BUS 315 prerequisites. My current focus is on correctly structuring the granular `minGrade` and `creditCount` requirements within the hierarchical `ALL_OF` and `ONE_OF` groups, ensuring all conditions are precisely mapped.\n\n\n**Validating Schema for Nested Logic**\n\nI'm confirming the schema's capacity to accurately represent the complex, nested AND/OR logic for BUS 315 prerequisites. My current focus is on correctly structuring the granular `minGrade` and `creditCount` requirements within the hierarchical `ALL_OF` and `ONE_OF` groups, ensuring all conditions are precisely mapped.\n\n\n**Validating Schema for Nested Logic**\n\nI'm confirming the schema's capacity to accurately represent the complex, nested AND/OR logic for BUS 315 prerequisites. My current focus is on correctly structuring the granular `minGrade` and `creditCount` requirements within the hierarchical `ALL_OF` and `ONE_OF` groups, ensuring all conditions are precisely mapped.\n\n\n**Validating Schema for Nested Logic**\n\nI'm confirming the schema's capacity to accurately represent the complex, nested AND/OR logic for BUS 315 prerequisites. My current focus is on correctly structuring the granular `minGrade` and `creditCount` requirements within the hierarchical `ALL_OF` and `ONE_OF` groups, ensuring all conditions are precisely mapped.\n\n\n**Validating Schema for Nested Logic**\n\nI'm confirming the schema's capacity to accurately represent the complex, nested AND/OR logic for BUS 315 prerequisites. My current focus is on correctly structuring the granular `minGrade` and `creditCount` requirements within the hierarchical `ALL_OF` and `ONE_OF` groups, ensuring all conditions are precisely mapped.\n\n\n**Validating Schema for Nested Logic**\n\nI'm confirming the schema's capacity to accurately represent the complex, nested AND/OR logic for BUS 315 prerequisites. My current focus is on correctly structuring the granular `minGrade` and `creditCount` requirements within the hierarchical `ALL_OF` and `ONE_OF` groups, ensuring all conditions are precisely mapped.\n\n\n**Validating Schema for Nested Logic**\n\nI'm confirming the schema's capacity to accurately represent the complex, nested AND/OR logic for BUS 315 prerequisites. My current focus is on correctly structuring the granular `minGrade` and `creditCount` requirements within the hierarchical `ALL_OF` and `ONE_OF` groups, ensuring all conditions are precisely mapped.\n\n\n**Validating Schema for Nested Logic**\n\nI'm confirming the schema's capacity to accurately represent the complex, nested AND/OR logic for BUS 315 prerequisites. My current focus is on correctly structuring the granular `minGrade` and `creditCount` requirements within the hierarchical `ALL_OF` and `ONE_OF` groups, ensuring all conditions are precisely mapped.\n\n\n**Validating Schema for Nested Logic**\n\nI'm confirming the schema's capacity to accurately represent the complex, nested AND/OR logic for BUS 315 prerequisites. My current focus is on correctly structuring the granular `minGrade` and `creditCount` requirements within the hierarchical `ALL_OF` and `ONE_OF` groups, ensuring all conditions are precisely mapped.\n\n\n**Validating Schema for Nested Logic**\n\nI'm confirming the schema's capacity to accurately represent the complex, nested AND/OR logic for BUS 315 prerequisites. My current focus is on correctly structuring the granular `minGrade` and `creditCount` requirements within the hierarchical `ALL_OF` and `ONE_OF` groups, ensuring all conditions are precisely mapped.\n\n\n**Validating Schema for Nested Logic**\n\nI'm confirming the schema's capacity to accurately represent the complex, nested AND/OR logic for BUS 315 prerequisites. My current focus is on correctly structuring the granular `minGrade` and `creditCount` requirements within the hierarchical `ALL_OF` and `ONE_OF` groups, ensuring all conditions are precisely mapped.\n\n\n**Validating Schema for Nested Logic**\n\nI'm confirming the schema's capacity to accurately represent the complex, nested AND/OR logic for BUS 315 prerequisites. My current focus is on correctly structuring the granular `minGrade` and `creditCount` requirements within the hierarchical `ALL_OF` and `ONE_OF` groups, ensuring all conditions are precisely mapped.\n\n\n**Validating Schema for Nested Logic**\n\nI'm confirming the schema's capacity to accurately represent the complex, nested AND/OR logic for BUS 315 prerequisites. My current focus is on correctly structuring the granular `minGrade` and `creditCount` requirements within the hierarchical `ALL_OF` and `ONE_OF` groups, ensuring all conditions are precisely mapped.\n\n\n**Validating Schema for Nested Logic**\n\nI'm confirming the schema's capacity to accurately represent the complex, nested AND/OR logic for BUS 315 prerequisites. My current focus is on correctly structuring the granular `minGrade` and `creditCount` requirements within the hierarchical `ALL_OF` and `ONE_OF` groups, ensuring all conditions are precisely mapped.\n\n\n**Validating Schema",
    "timestamp": "2025-07-04T05:31:11.282Z"
  },
  {
    "department": "BUS",
    "number": "316",
    "reason": "Ambiguity issue: - The phrase \"both with a minimum grade of C- and 45 units\" creates ambiguity. The grammatical structure suggests that \"45 units\" is a condition applied to each of the prerequisite courses (BUS 312 and BUS 336) individually. However, the provided schema does not support associating a unit count requirement directly with an individual `RequirementCourse` object. The `RequirementCreditCount` type is a standalone requirement, not a modifier for a specific course. If the intent is that the student must have completed 45 units *in total* in addition to passing the courses, the phrasing could have been clearer (e.g., \"BUS 312 and BUS 336, with a minimum grade of C-, and 45 units of university coursework\"). As written, the requirement is not unambiguously representable by the schema.",
    "timestamp": "2025-07-04T05:31:31.886Z"
  },
  {
    "department": "BUS",
    "number": "318",
    "reason": "Ambiguity issue: The schema does not support the representation of general course notes or information about concentration applicability. The text \"This course does not count towards the Finance Concentration\" falls into this category.",
    "timestamp": "2025-07-04T05:31:40.461Z"
  },
  {
    "department": "BUS",
    "number": "338",
    "reason": "Ambiguity issue: Missing schema support for temporal/cohort restrictions on student admission status. The specific text causing the ambiguity is \"admitted Fall 2025 - onwards\".",
    "timestamp": "2025-07-04T05:31:50.007Z"
  },
  {
    "department": "BUS",
    "number": "340",
    "reason": "Ambiguity issue: Requirements cannot be clearly represented",
    "timestamp": "2025-07-04T05:33:34.843Z"
  },
  {
    "department": "BUS",
    "number": "341",
    "reason": "Ambiguity issue: - The schema does not support representing eligibility criteria based on specific admission periods. The text \"students admitted to the business administration minor between Fall 2012 - Summer 2016\" and \"students admitted to the business administration minor Fall 2016 - onwards\" specifies temporal conditions for program admission that cannot be captured by the existing `RequirementProgram` type, which only allows for the program name.",
    "timestamp": "2025-07-04T05:33:44.748Z"
  },
  {
    "department": "BUS",
    "number": "347",
    "reason": "Ambiguity issue: The temporal condition \"admitted Fall 2025 - onwards\" cannot be clearly and unambiguously represented by the schema, as temporal constraints are not supported according to the known data issues.\n\"admitted Fall 2025 - onwards\"",
    "timestamp": "2025-07-04T05:34:24.754Z"
  },
  {
    "department": "BUS",
    "number": "360W",
    "reason": "Ambiguity issue: - The requirements cannot be unambiguously represented due to:\n1.  A temporal constraint in the prerequisites that is not supported by the schema's known data issues: \"admitted Fall 2022 onwards\".\n2.  The schema's `RequirementProgram` type expects a single program name, but the text uses descriptive phrases implying multiple program types, such as \"business administration major, honours, or second degree program\", which cannot be unambiguously mapped to the schema's `program: string` field.",
    "timestamp": "2025-07-04T05:34:42.768Z"
  },
  {
    "department": "BUS",
    "number": "361",
    "reason": "Ambiguity issue: The prerequisite contains a temporal condition related to admission (\"admitted Fall 2025 - onwards\") which is not supported by the schema's known data issues. Additionally, representing a \"minor\" status within the `program` type is not clearly supported.\n\nThe specific text that causes the ambiguity is: \"business administration minor students admitted Fall 2025 - onwards with 45 units.\"",
    "timestamp": "2025-07-04T05:34:48.904Z"
  },
  {
    "department": "BUS",
    "number": "374",
    "reason": "Ambiguity issue: The requirement includes temporal conditions that are not supported by the schema. The specific text causing the ambiguity is \"admitted Fall 2025 - onwards\".",
    "timestamp": "2025-07-04T05:34:55.822Z"
  },
  {
    "department": "BUS",
    "number": "381",
    "reason": "Ambiguity issue: The schema does not support temporal conditions related to student admission dates or cohorts. The text \"admitted Fall 2025 - onwards\" cannot be represented.",
    "timestamp": "2025-07-04T05:35:02.140Z"
  },
  {
    "department": "BUS",
    "number": "449",
    "reason": "Ambiguity issue: - The schema does not support specifying a minimum grade for course count requirements. The phrase \"upper division Writing (W) course, both with a minimum grade of C-\" attempts to apply a minimum grade to a course count requirement, which is not supported by the `RequirementCourseCount` interface.",
    "timestamp": "2025-07-04T05:36:43.733Z"
  },
  {
    "department": "BUS",
    "number": "450",
    "reason": "Ambiguity issue: The schema does not support specifying courses by a general designation like '(W)' or a subject area like 'Writing' as a department. The phrase \"another upper division Writing (W) course\" is ambiguous because \"Writing\" is not a department code, and the \"(W)\" designation is not a supported attribute for courses within the schema.\nSpecific text: \"another upper division Writing (W) course\"",
    "timestamp": "2025-07-04T05:36:53.414Z"
  },
  {
    "department": "BUS",
    "number": "453",
    "reason": "Ambiguity issue: The requirements for BUS 453 are ambiguous for the following reasons:\n\n1.  **Unclear Course Specification**: The prerequisite includes `\"upper division Writing (W) course\"`. The schema's `RequirementCourse` type requires a `department` and `number`. There is no mechanism in the schema to specify a course requirement based on a general attribute like \"Writing (W)\" without a defined department.\n2.  **Unrepresentable Minimum Grade for Programs**: The prerequisite states `\"BUS 360W or (corporate environmental and social sustainability certificate students or innovation and entrepreneurship certificate students with an upper division Writing (W) course), with a minimum grade of C-\"`. The placement of `\", with a minimum grade of C-\"` suggests it applies to the entire OR condition. If this minimum grade is intended to apply to the certificate requirements (e.g., \"certificate students with a minimum grade of C-\"), the `RequirementProgram` type in the schema does not support a `minGrade` property, preventing unambiguous representation of a minimum grade requirement for certificate holders.",
    "timestamp": "2025-07-04T05:37:08.788Z"
  },
  {
    "department": "BUS",
    "number": "462",
    "reason": "Ambiguity issue: - The text \"Corequisite: BUS 336 can be taken concurrently.\" is ambiguous. The term \"Corequisite:\" suggests it should be a corequisite, but the phrase \"can be taken concurrently\" is typically a modifier for a prerequisite, indicating it can be taken at the same time as the course itself, and the schema supports this with `canBeTakenConcurrently: \"true\"` on `RequirementCourse`. The schema does not provide a `canBeTakenConcurrently` field for corequisites. Therefore, if it is intended as a corequisite, the \"can be taken concurrently\" information cannot be represented. If it is intended as a prerequisite that can be taken concurrently, the \"Corequisite:\" label is misleading.",
    "timestamp": "2025-07-04T05:37:20.475Z"
  },
  {
    "department": "BUS",
    "number": "473",
    "reason": "Ambiguity issue: - The schema does not support conditional requirements based on admission dates or terms. The text \"Students admitted prior to Fall 2023\" and \"students admitted Fall 2023 onward\" introduces a condition that cannot be directly mapped to the structured types within the provided schema.",
    "timestamp": "2025-07-04T05:37:29.557Z"
  },
  {
    "department": "BUS",
    "number": "474",
    "reason": "Ambiguity issue: The requirements cannot be clearly and unambiguously represented due to the following reasons:\n\n1.  **Admission Term Dependency in Prerequisites:** The schema does not support requirements that are conditional on the student's admission term or catalog year. The prerequisite text includes a distinction: \"Students admitted prior to Fall 2023 with (BUS 373 or BUS 336) and BUS 360W, or students admitted Fall 2023 onward with BUS 373 and BUS 360W\". This conditional logic based on admission term cannot be represented within the current schema.\n\n2.  **Course Range in Credit Conflicts:** The schema's `credit_conflicts` structure, specifically the `ConflictEquivalentCourse` type, only allows for specifying a single course number (department and number). The note section states: \"Students who have taken BUS 490-495 under this topic may not take this course for further credit.\" This specifies a range of course numbers (490-495), which cannot be directly represented by the schema's single course number field.",
    "timestamp": "2025-07-04T05:37:40.899Z"
  },
  {
    "department": "BUS",
    "number": "475",
    "reason": "Ambiguity issue: Explanation:\n1.  The prerequisite includes the phrase \"an upper division Writing (W) course\". The provided schema does not support specifying courses by attributes or designations such as \"Writing (W)\". The `RequirementCourse` and `RequirementCourseCount` interfaces only allow for specifying `department`, `number`, and `level`.\n2.  The credit conflict note specifies \"BUS 49X\". The schema's `ConflictEquivalentCourse` interface has a `number` field that expects a specific course number and does not support wildcards or ranges like \"49X\".",
    "timestamp": "2025-07-04T05:37:48.732Z"
  },
  {
    "department": "BUS",
    "number": "477",
    "reason": "Ambiguity issue: The schema does not support specifying a course by a designation like \"(W)\" or a general subject category like \"Writing\" unless it is a defined department. The `department` field in `RequirementCourseCount` requires a specific department name or code, which is not provided for \"Writing (W) course\".\nThe specific text that causes the ambiguity is: \"an upper division Writing (W) course\".",
    "timestamp": "2025-07-04T05:37:59.874Z"
  },
  {
    "department": "BUS",
    "number": "486",
    "reason": "Ambiguity issue: The prerequisite and corequisite requirements are clearly representable by the schema. However, the note section introduces ambiguity: \"Students who have taken BUS 490-495 under this topic may not take this course for further credit.\"\n\nThe ambiguity stems from the phrase \"under this topic\". The schema does not provide a specific field to represent the \"topic\" of a credit conflict. While the `title` field exists within the `ConflictEquivalentCourse` interface, its intended purpose for capturing topical qualifiers of special topics courses is not explicitly defined. This makes the mapping of \"under this topic\" to the schema ambiguous, as it's unclear if the `title` field is meant to accommodate such contextual information for credit exclusions.",
    "timestamp": "2025-07-04T05:38:19.035Z"
  },
  {
    "department": "BUS",
    "number": "489",
    "reason": "Ambiguity issue: - The phrase \"Writing (W) course\" is not clearly representable. The schema supports specifying a department and level for courses (e.g., `department: \"English\", level: \"1XX\"`), but it does not have a mechanism to specify course attributes such as a 'W' designation. The \"(W)\" in the requirement strongly suggests such an attribute, which cannot be mapped to the provided schema.",
    "timestamp": "2025-07-04T05:38:31.390Z"
  },
  {
    "department": "BUS",
    "number": "496",
    "reason": "Ambiguity issue: - The schema does not support temporal restrictions on admission or eligibility, which is present in the prerequisite description. The specific text causing this is: \"admitted to the faculty in Fall 2022 and onward\".",
    "timestamp": "2025-07-04T05:38:38.405Z"
  },
  {
    "department": "CA",
    "number": "110",
    "reason": "Ambiguity issue: The prerequisite \"Open to art, performance and cinema studies majors\" specifies eligibility based on the student's major. The schema includes a `RequirementProgram` type for such requirements. However, the `program` field within `RequirementProgram` typically expects specific program identifiers (e.g., \"ART-BA\", \"PERF-BA\"). The provided text uses a descriptive category that implies multiple specific majors but does not list their exact identifiers. This lack of specific program identifiers prevents an unambiguous mapping to the `RequirementProgram` schema type, or a group of `RequirementProgram` types.\n\n\"Open to art, performance and cinema studies majors.\"",
    "timestamp": "2025-07-04T05:38:50.418Z"
  },
  {
    "department": "CA",
    "number": "217",
    "reason": "Ambiguity issue: - The prerequisite requirement \"45 units including one history/theory course within the School for the Contemporary Arts\" cannot be unambiguously represented because the schema does not support specifying course subject areas or types, such as \"history/theory\". Additionally, the credit conflict notes \"Students with credit for CA (or FPA) 311\" and \"Students with credit for CA (or FPA) 317\" are not representable as the schema's `credit_conflicts` only supports a single department per conflicting course, not an OR condition between departments like \"CA (or FPA)\".",
    "timestamp": "2025-07-04T05:42:10.986Z"
  },
  {
    "department": "CA",
    "number": "238W",
    "reason": "Ambiguity issue: - The `credit_conflicts` schema does not support representing logical groupings (e.g., `ONE_OF`) of conflicting courses, only individual courses. The text \"CA (or FPA) 332 or 238\" implies a logical OR relationship between groups of courses, which cannot be captured by the current schema for credit conflicts.",
    "timestamp": "2025-07-04T05:42:35.720Z"
  },
  {
    "department": "CA",
    "number": "249",
    "reason": "Ambiguity issue: The phrase \"and/or\" in the prerequisite \"CA (or FPA) 140 and/or prior approval\" creates ambiguity. This phrase can be interpreted in multiple ways:\n1.  It could mean that *either* the course requirement (CA 140 or FPA 140) *or* prior approval is sufficient, which would translate to a `ONE_OF` logic between the course group and the permission.\n2.  It could mean that *both* the course requirement (CA 140 or FPA 140) *and* prior approval are required, which would translate to an `ALL_OF` logic between the course group and the permission.\n\nWhile the schema can represent both `ONE_OF` and `ALL_OF` logic, and can nest these structures to accommodate the \"CA (or FPA) 140\" part, the source text does not clearly specify which logical interpretation of \"and/or\" is intended. Therefore, the requirement cannot be unambiguously represented.",
    "timestamp": "2025-07-04T05:42:55.426Z"
  },
  {
    "department": "CA",
    "number": "319W",
    "reason": "Ambiguity issue: - The schema does not support specifying a category or type of courses within a department (e.g., \"history/theory courses\"). The text \"history/theory courses\" in the prerequisite cannot be unambiguously represented.",
    "timestamp": "2025-07-04T05:43:24.887Z"
  },
  {
    "department": "CA",
    "number": "326",
    "reason": "Ambiguity issue: The phrase \"at an appropriate level\" in the corequisite description cannot be represented by the schema. The schema supports specifying specific courses or course levels (e.g., '1XX'), but not subjective qualitative conditions on the student's academic standing relative to a listed course.\n\"at an appropriate level\"",
    "timestamp": "2025-07-04T05:43:33.106Z"
  },
  {
    "department": "CA",
    "number": "338W",
    "reason": "Ambiguity issue: **Representing Departmental Options**\n\nI'm refining the representation of the \"CA (or FPA)\" prerequisite. Given the schema's `department` field is a string, I'm planning to create separate `RequirementCourse` entries for each department (CA and FPA) within a `ONE_OF` logical group for each specific course number. The advisory note will be captured using `RequirementOther`.\n\n\n**Representing Departmental Options**\n\nI'm refining the representation of the \"CA (or FPA)\" prerequisite. Given the schema's `department` field is a string, I'm planning to create separate `RequirementCourse` entries for each department (CA and FPA) within a `ONE_OF` logical group for each specific course number. The advisory note will be captured using `RequirementOther`.\n\n\n**Representing Departmental Options**\n\nI'm refining the representation of the \"CA (or FPA)\" prerequisite. Given the schema's `department` field is a string, I'm planning to create separate `RequirementCourse` entries for each department (CA and FPA) within a `ONE_OF` logical group for each specific course number. The advisory note will be captured using `RequirementOther`.\n\n\n**Representing Departmental Options**\n\nI'm refining the representation of the \"CA (or FPA)\" prerequisite. Given the schema's `department` field is a string, I'm planning to create separate `RequirementCourse` entries for each department (CA and FPA) within a `ONE_OF` logical group for each specific course number. The advisory note will be captured using `RequirementOther`.\n\n\n**Representing Departmental Options**\n\nI'm refining the representation of the \"CA (or FPA)\" prerequisite. Given the schema's `department` field is a string, I'm planning to create separate `RequirementCourse` entries for each department (CA and FPA) within a `ONE_OF` logical group for each specific course number. The advisory note will be captured using `RequirementOther`.\n\n\n**Representing Departmental Options**\n\nI'm refining the representation of the \"CA (or FPA)\" prerequisite. Given the schema's `department` field is a string, I'm planning to create separate `RequirementCourse` entries for each department (CA and FPA) within a `ONE_OF` logical group for each specific course number. The advisory note will be captured using `RequirementOther`.\n\n\n**Representing Departmental Options**\n\nI'm refining the representation of the \"CA (or FPA)\" prerequisite. Given the schema's `department` field is a string, I'm planning to create separate `RequirementCourse` entries for each department (CA and FPA) within a `ONE_OF` logical group for each specific course number. The advisory note will be captured using `RequirementOther`.\n\n\n**Representing Departmental Options**\n\nI'm refining the representation of the \"CA (or FPA)\" prerequisite. Given the schema's `department` field is a string, I'm planning to create separate `RequirementCourse` entries for each department (CA and FPA) within a `ONE_OF` logical group for each specific course number. The advisory note will be captured using `RequirementOther`.\n\n\n**Representing Departmental Options**\n\nI'm refining the representation of the \"CA (or FPA)\" prerequisite. Given the schema's `department` field is a string, I'm planning to create separate `RequirementCourse` entries for each department (CA and FPA) within a `ONE_OF` logical group for each specific course number. The advisory note will be captured using `RequirementOther`.\n\n\n**Representing Departmental Options**\n\nI'm refining the representation of the \"CA (or FPA)\" prerequisite. Given the schema's `department` field is a string, I'm planning to create separate `RequirementCourse` entries for each department (CA and FPA) within a `ONE_OF` logical group for each specific course number. The advisory note will be captured using `RequirementOther`.\n\n\n**Representing Departmental Options**\n\nI'm refining the representation of the \"CA (or FPA)\" prerequisite. Given the schema's `department` field is a string, I'm planning to create separate `RequirementCourse` entries for each department (CA and FPA) within a `ONE_OF` logical group for each specific course number. The advisory note will be captured using `RequirementOther`.\n\n\n**Representing Departmental Options**\n\nI'm refining the representation of the \"CA (or FPA)\" prerequisite. Given the schema's `department` field is a string, I'm planning to create separate `RequirementCourse` entries for each department (CA and FPA) within a `ONE_OF` logical group for each specific course number. The advisory note will be captured using `RequirementOther`.\n\n\n**Representing Departmental Options**\n\nI'm refining the representation of the \"CA (or FPA)\" prerequisite. Given the schema's `department` field is a string, I'm planning to create separate `RequirementCourse` entries for each department (CA and FPA) within a `ONE_OF` logical group for each specific course number. The advisory note will be captured using `RequirementOther`.\n\n\n**Representing Departmental Options**\n\nI'm refining the representation of the \"CA (or FPA)\" prerequisite. Given the schema's `department` field is a string, I'm planning to create separate `RequirementCourse` entries for each department (CA and FPA) within a `ONE_OF` logical group for each specific course number. The advisory note will be captured using `RequirementOther`.\n\n\n**Representing Departmental Options**\n\nI'm refining the representation of the \"CA (or FPA)\" prerequisite. Given the schema's `department` field is a string, I'm planning to create separate `RequirementCourse` entries for each department (CA and FPA) within a `ONE_OF` logical group for each specific course number. The advisory note will be captured using `RequirementOther`.\n\n\n**Representing Departmental Options**\n\nI'm refining the representation of the \"CA (or FPA)\" prerequisite. Given the schema's `department` field is a string, I'm planning to create separate `RequirementCourse` entries for each department (CA and FPA) within a `ONE_OF` logical group for each specific course number. The advisory note will be captured using `RequirementOther`.\n\n\n**Representing Departmental Options**\n\nI'm refining the representation of the \"CA (or FPA)\" prerequisite. Given the schema's `department` field is a string, I'm planning to create separate `RequirementCourse` entries for each department (CA and FPA) within a `ONE_OF` logical group for each specific course number. The advisory note will be captured using `RequirementOther`.\n\n\n**Representing Departmental Options**\n\nI'm refining the representation of the \"CA (or FPA)\" prerequisite. Given the schema's `department` field is a string, I'm planning to create separate `RequirementCourse` entries for each department (CA and FPA) within a `ONE_OF` logical group for each specific course number. The advisory note will be captured using `RequirementOther`.\n\n\n**Representing Departmental Options**\n\nI'm refining the representation of the \"CA (or FPA)\" prerequisite. Given the schema's `department` field is a string, I'm planning to create separate `RequirementCourse` entries for each department (CA and FPA) within a `ONE_OF` logical group for each specific course number. The advisory note will be captured using `RequirementOther`.\n\n\n**Representing Departmental Options**\n\nI'm refining the representation of the \"CA (or FPA)\" prerequisite. Given the schema's `department` field is a string, I'm planning to create separate `RequirementCourse` entries for each department (CA and FPA) within a `ONE_OF` logical group for each specific course number. The advisory note will be captured using `RequirementOther`.\n\n\n**Representing Departmental Options**\n\nI'm refining the representation of the \"CA (or FPA)\" prerequisite. Given the schema's `department` field is a string, I'm planning to create separate `RequirementCourse` entries for each department (CA and FPA) within a `ONE_OF` logical group for each specific course number. The advisory note will be captured using `RequirementOther`.\n\n\n**Representing Departmental Options**\n\nI'm refining the representation of the \"CA (or FPA)\" prerequisite. Given the schema's `department` field is a string, I'm planning to create separate `RequirementCourse` entries for each department (CA and FPA) within a `ONE_OF` logical group for each specific course number. The advisory note will be captured using `RequirementOther`.\n\n\n**Representing Departmental Options**\n\nI'm refining the representation of the \"CA (or FPA)\" prerequisite. Given the schema's `department` field is a string, I'm planning to create separate `RequirementCourse` entries for each department (CA and FPA) within a `ONE_OF` logical group for each specific course number. The advisory note will be captured using `RequirementOther`.\n\n\n**Representing Departmental Options**\n\nI'm refining the representation of the \"CA (or FPA)\" prerequisite. Given the schema's `department` field is a string, I'm planning to create separate `RequirementCourse` entries for each department (CA and FPA) within a `ONE_OF` logical group for each specific course number. The advisory note will be captured using `RequirementOther`.\n\n\n**Representing Departmental Options**\n\nI'm refining the representation of the \"CA (or FPA)\" prerequisite. Given the schema's `department` field is a string, I'm planning to create separate `RequirementCourse` entries for each department (CA and FPA) within a `ONE_OF` logical group for each specific course number. The advisory note will be captured using `RequirementOther`.\n\n\n**Representing Departmental Options**\n\nI'm refining the representation of the \"CA (or FPA)\" prerequisite. Given the schema's `department` field is a",
    "timestamp": "2025-07-04T05:46:29.629Z"
  },
  {
    "department": "CA",
    "number": "400",
    "reason": "Ambiguity issue: - The schema does not support representing \"academic standing\" or \"year of study completion\". The phrase \"minimum standing of completion of second year\" cannot be unambiguously mapped to existing schema types like `creditCount` or `courseCount`, which refer to course levels (e.g., 'LD', 'UD') rather than a student's overall academic standing or year of study.",
    "timestamp": "2025-07-04T05:47:44.251Z"
  },
  {
    "department": "CA",
    "number": "401",
    "reason": "Ambiguity issue: - The schema does not support representing \"academic standing\" or \"completion of a specific year level\". The text \"minimum standing of completion of second year in any of the programs offered in the School for the Contemporary Arts\" cannot be clearly and unambiguously mapped to any existing schema type.",
    "timestamp": "2025-07-04T05:47:50.757Z"
  },
  {
    "department": "CA",
    "number": "485",
    "reason": "Ambiguity issue: The schema does not support specifying GPA requirements for specific departments. The text \"an overall average of 3.5 in CA courses\" refers to such a requirement.",
    "timestamp": "2025-07-04T05:49:12.250Z"
  },
  {
    "department": "CHEM",
    "number": "110",
    "reason": "Ambiguity issue: Explanation: The credit conflict requirement cannot be fully represented due to limitations in the schema for handling specific conditions. The text \"grade of B or better in Chemistry 12 (or equivalent)\" is problematic because the `credit_conflicts` schema does not support specifying a minimum grade (`minGrade`) or handling equivalent courses (`orEquivalent`). Furthermore, the \"Known data issues\" explicitly state that \"Equivalent courses are not supported\".",
    "timestamp": "2025-07-04T05:49:24.598Z"
  },
  {
    "department": "CHEM",
    "number": "111",
    "reason": "Ambiguity issue: Missing schema support for minimum grade and equivalent clauses within credit conflicts.\nQuoted text: \"Students with a grade of B or better in Chemistry 12 (or equivalent)\"",
    "timestamp": "2025-07-04T05:49:33.180Z"
  },
  {
    "department": "CHEM",
    "number": "230",
    "reason": "Ambiguity issue: - The schema does not support conditional recommendations. The text \"Students who expect to take further courses in inorganic chemistry\" introduces a condition that cannot be represented within the `recommended_corequisite` field or any other structured field in the schema.",
    "timestamp": "2025-07-04T05:50:00.278Z"
  },
  {
    "department": "CHEM",
    "number": "260",
    "reason": "Ambiguity issue: - The note \"PHYS 285 will be accepted in lieu of CHEM 260\" describes an equivalent course scenario, which cannot be represented due to the known data issue stating that \"Equivalent courses are not supported.\"",
    "timestamp": "2025-07-04T05:50:18.414Z"
  },
  {
    "department": "CHEM",
    "number": "306",
    "reason": "Ambiguity issue: - The requirements are not clearly and unambiguously represented because:\n1.  The phrase \"science program\" for the `creditCount` requirement is too general. The schema's `department` field expects specific department codes or a list of them, not broad categories.\n2.  The phrases \"first-year calculus\", \"chemistry\", and \"physics\" are not specific course identifiers (department and number) as required by the `RequirementCourse` type. The schema does not support specifying general subject areas or levels for individual course requirements.",
    "timestamp": "2025-07-04T05:50:30.384Z"
  },
  {
    "department": "CHEM",
    "number": "340",
    "reason": "Ambiguity issue: The requirements are ambiguous due to the following reasons:\n1.  **\"science or applied science program\"**: The schema's `RequirementCreditCount` interface has a `department` field which expects specific department codes (e.g., \"CHEM\", \"PHYS\") or an array of department codes. It does not support abstract program types like \"science program\" or \"applied science program\". This part of the requirement cannot be unambiguously represented.\n2.  **\"first year chemistry\", \"physics\", and \"calculus\"**: These phrases are too vague. The schema expects specific course numbers (e.g., `CHEM 101`) or a combination of `department` and `level` (e.g., `department: \"CHEM\", level: \"1XX\"`). The provided text does not offer enough specificity to map these to concrete schema types without making assumptions about which specific courses constitute \"first year chemistry\", \"physics\", or \"calculus\".",
    "timestamp": "2025-07-04T05:50:39.061Z"
  },
  {
    "department": "CHEM",
    "number": "364",
    "reason": "Ambiguity issue: The statement \"PHYS 385 will be accepted in lieu of CHEM 364\" represents an equivalence that is not supported by the schema, as per the \"Known data issues\" stating \"Equivalent courses are not supported\".",
    "timestamp": "2025-07-04T05:50:48.235Z"
  },
  {
    "department": "CHEM",
    "number": "406",
    "reason": "Ambiguity issue: - The requirement \"completion of 56 units toward a BSc degree\" cannot be unambiguously represented. The `RequirementCreditCount` schema supports specifying `credits` and `department` (or `departments`), but it lacks a field to specify the *degree program* (e.g., BSc) for which the units are counted. The `department` field is intended for the department of the courses, not the degree program itself.",
    "timestamp": "2025-07-04T05:50:54.086Z"
  },
  {
    "department": "CHEM",
    "number": "449",
    "reason": "Ambiguity issue: - The schema requires a `department` field for `RequirementCourse` objects. The input text includes course numbers \"260\" and \"283 (or 284)\" without explicit department prefixes. While context suggests they belong to the \"CHEM\" department, the provided examples do not demonstrate inference of departments for course numbers. Therefore, these parts cannot be unambiguously represented in the schema.",
    "timestamp": "2025-07-04T05:51:08.330Z"
  },
  {
    "department": "CHEM",
    "number": "481",
    "reason": "Ambiguity issue: - The phrases \"knowledge of chemistry at an advanced level\" and \"completion of 300-level course requirements\" are too vague and subjective to be clearly and unambiguously represented by the provided schema. The schema supports specific course counts at certain levels (e.g., `RequirementCourseCount` for \"two 300-level CHEM courses\"), but \"advanced level\" is not a quantifiable metric, and \"300-level course requirements\" does not specify a count or specific courses, making it impossible to map clearly to structured types like `RequirementCourse` or `RequirementCourseCount`. These would likely be relegated to `RequirementOther`.",
    "timestamp": "2025-07-04T05:51:18.214Z"
  },
  {
    "department": "CHEM",
    "number": "484",
    "reason": "Ambiguity issue: - The schema lacks support for subjective assessments of knowledge and vague statements about academic progression. The specific text causing ambiguity is: \"knowledge of chemistry at an advanced level\" and \"Normally taken after completion of 300-level course requirements.\" The former is a subjective assessment of knowledge, and the latter is too vague to map to a specific course, course count, or credit count as supported by the schema.",
    "timestamp": "2025-07-04T05:51:26.390Z"
  },
  {
    "department": "CHIN",
    "number": "181",
    "reason": "Ambiguity issue: - The text \"Corequisite: This course may be taken concurrently with CHIN 180.\" is ambiguous. The \"Corequisite:\" label suggests that CHIN 180 is a corequisite, which means it must be taken at the same time as CHIN 181. However, the phrase \"This course may be taken concurrently with CHIN 180\" is typically used to indicate that a prerequisite (CHIN 180 in this case) can be taken at the same time as the current course. The schema has separate fields for `prerequisite` and `corequisite`, and does not have a clear way to represent a course that is both, or to resolve this conflicting phrasing.",
    "timestamp": "2025-07-04T05:52:23.501Z"
  },
  {
    "department": "CHIN",
    "number": "190",
    "reason": "Ambiguity issue: - The prerequisite describes the target audience and their language proficiency, which does not map clearly to any of the specific structured `RequirementNode` types in the schema (e.g., `RequirementCourse`, `RequirementCGPA`, `RequirementCreditCount`). While it could be placed in `RequirementOther` as a note, this does not represent the requirement in a structured, machine-readable, or verifiable manner as intended by the schema's specific types. The schema lacks a dedicated type for such qualitative eligibility criteria. The specific text that causes the ambiguity is: \"This course is for students of Chinese origin who have native or near native speaking ability in Chinese (Mandarin or other dialects), but limited knowledge of written Chinese.\"",
    "timestamp": "2025-07-04T05:52:31.377Z"
  },
  {
    "department": "CHIN",
    "number": "290",
    "reason": "Ambiguity issue: Requirements cannot be clearly represented",
    "timestamp": "2025-07-04T05:56:29.847Z"
  },
  {
    "department": "CHIN",
    "number": "291",
    "reason": "Ambiguity issue: - The schema does not support representing descriptive eligibility criteria or target audience characteristics as structured requirements. The text \"This course is for students of Chinese origin who have near native speaking ability in Chinese (Mandarin or other dialects), but basic knowledge of written Chinese\" describes such criteria, which cannot be parsed into specific requirement types like `course`, `program`, or `CGPA`. While it could be placed in a generic `RequirementOther` or `RequirementPermission` node, this would not be a clear or unambiguous representation of the requirement's nature.",
    "timestamp": "2025-07-04T05:56:37.303Z"
  },
  {
    "department": "CMNS",
    "number": "311",
    "reason": "Ambiguity issue: - The requirement \"45 units with a minimum CGPA of 2.00\" cannot be clearly and unambiguously represented. The schema does not have a specific type for this combined requirement, nor does it provide a clear mechanism to link a `creditCount` requirement with a `CGPA` requirement in this conjunctive manner.",
    "timestamp": "2025-07-04T05:57:34.722Z"
  },
  {
    "department": "CMNS",
    "number": "432",
    "reason": "Ambiguity issue: - The schema does not support specifying a minimum number of units required for a CGPA requirement. The prerequisite \"60 units with a minimum CGPA of 2.00\" cannot be fully represented as the \"60 units\" component is not supported by the `RequirementCGPA` type.",
    "timestamp": "2025-07-04T05:58:44.274Z"
  },
  {
    "department": "CMNS",
    "number": "486",
    "reason": "Ambiguity issue: - The text \"Depends on topic\" indicates that the actual prerequisite is not specified and is variable based on the course topic. The provided schema is designed to represent concrete, defined requirements (like specific courses, programs, or GPA thresholds), not placeholders for future or variable conditions. Therefore, the requirement itself cannot be clearly and unambiguously represented by the schema.",
    "timestamp": "2025-07-04T06:00:21.773Z"
  },
  {
    "department": "CMNS",
    "number": "487",
    "reason": "Ambiguity issue: Reason: The prerequisite statement \"Depends on topic\" describes a variable condition that cannot be mapped to any of the specific, structured requirement types (like `RequirementCourse`, `RequirementProgram`, `RequirementCreditCount`, etc.) provided in the schema. The schema expects concrete academic requirements, not dependencies on unspecified external factors like course topics. The phrase \"published before enrollment\" is also not an academic requirement that can be parsed by the schema.\nQuote: \"Depends on topic\"",
    "timestamp": "2025-07-04T06:00:30.240Z"
  },
  {
    "department": "CMNS",
    "number": "488",
    "reason": "Ambiguity issue: The prerequisite \"Depends on topic; published before enrollment\" cannot be clearly represented because the specific requirement is not defined. The phrase \"Depends on topic\" indicates that the prerequisite varies based on the course's topic, which is not a parameter supported by the schema for defining concrete academic requirements. The schema expects specific courses, programs, or GPA thresholds, not variable or topic-dependent conditions.\n\nSpecific text causing ambiguity: \"Depends on topic\"",
    "timestamp": "2025-07-04T06:00:36.229Z"
  },
  {
    "department": "CMNS",
    "number": "848",
    "reason": "Ambiguity issue: The requirement cannot be clearly and unambiguously represented because the schema does not support temporal conditions for credit conflicts. The specific text causing this is: \"in Spring 2014 & Spring 2015\".",
    "timestamp": "2025-07-04T06:01:00.090Z"
  },
  {
    "department": "CMPT",
    "number": "276",
    "reason": "Ambiguity issue: - The schema does not support representing requirements for courses based on a designation or category like \"W course\". The `RequirementCourse` type requires a specific department and number, and `RequirementCourseCount` requires a department and level, neither of which covers a general course designation. Consequently, the application of a minimum grade to this unrepresentable requirement is also not possible.\n\nThe specific text causing the ambiguity is: \"One W course\" and the phrase \"all with a minimum grade of C-\" as it applies to this requirement.",
    "timestamp": "2025-07-04T06:01:09.152Z"
  },
  {
    "department": "CMPT",
    "number": "426",
    "reason": "Ambiguity issue: The requirements are ambiguous because:\n1.  The term \"Normally\" makes it unclear whether the academic requirements (minimum 45 units, CMPT 275 or 276, minimum CGPA of 2.50) are strict prerequisites or recommendations. The schema does not support \"normal\" requirements.\n2.  Temporal constraints, such as \"at least two terms before their anticipated co-op placement\" and \"by the end of the term of application,\" are not supported by the schema.\n3.  Procedural enrollment requirements, such as \"enroll with the co-op program,\" are not directly representable as academic prerequisites within the schema's structured types.\n\nThe specific text that causes ambiguity regarding the academic requirements is: \"Normally, students will have completed a minimum of 45 units by the end of the term of application, CMPT 275 or 276, and have a minimum CGPA of 2.50.\"",
    "timestamp": "2025-07-04T06:04:16.622Z"
  },
  {
    "department": "CMPT",
    "number": "464",
    "reason": "Ambiguity issue: Missing schema support for date ranges and equivalent courses in credit conflicts. The text \"between 2003 and 2007 or equivalent\" cannot be fully represented.",
    "timestamp": "2025-07-04T06:04:23.929Z"
  },
  {
    "department": "CMPT",
    "number": "495",
    "reason": "Ambiguity issue: The schema does not support temporal sequencing constraints such as \"must be taken in the term immediately following\". Additionally, the schema does not have fields to represent requirements related to specific project or faculty supervisor matching, which would need to be captured as unstructured text.\n\nThe specific text that causes the ambiguity is: \"CMPT 495 must be taken in the term immediately following the successful completion of CMPT 494 and must be for the same project and faculty supervisor.\"",
    "timestamp": "2025-07-04T06:05:16.403Z"
  },
  {
    "department": "CMPT",
    "number": "626",
    "reason": "Ambiguity issue: - The schema's `level` property for `RequirementCreditCount` does not support specifying levels like \"700-level or higher\". It only supports predefined levels such as '1XX', '2XX', '3XX', '4XX', 'LD', or 'UD'. The text causing the ambiguity is: \"700-level or higher\".",
    "timestamp": "2025-07-04T06:06:20.613Z"
  },
  {
    "department": "COGS",
    "number": "490",
    "reason": "Ambiguity issue: - The schema does not support specifying that courses must be drawn from a specific academic program's defined curriculum. The phrase \"within the Cognitive Science Honours program requirements\" indicates such a program-specific constraint that cannot be unambiguously mapped to the available schema fields, particularly the `department` field in `RequirementCourseCount`, which is intended for official department codes.",
    "timestamp": "2025-07-04T06:06:58.870Z"
  },
  {
    "department": "CRIM",
    "number": "344",
    "reason": "Ambiguity issue: The schema does not support specifying semesters for credit conflicts. The note includes semester-specific conditions for credit conflicts, making the requirement unrepresentable as stated. The specific text causing this ambiguity is \"CRIM 416 in Spring 2019\" and \"CRIM 414 (Spring 2011, Spring 2012, Spring 2013, and Fall 2015)\".",
    "timestamp": "2025-07-04T06:07:31.667Z"
  },
  {
    "department": "CRIM",
    "number": "370",
    "reason": "Ambiguity issue: The requirements cannot be clearly and unambiguously represented due to two main reasons:\n1.  The temporal constraint on the application requirement: The text \"no later than the last day of classes of the preceding term\" imposes a temporal condition on the \"written application\" requirement. According to the \"Known data issues\", \"any text that mentions completing a prerequisite during a specific semester is not supported.\" This temporal aspect of the application requirement cannot be represented by the schema.\n2.  The concurrency restriction: The statement \"CRIM 370 and 470 may not be taken concurrently\" describes a restriction where two specific courses cannot be taken simultaneously. The schema's `credit_conflicts` field is designed for conflicts related to credit value or course equivalency, not for structured representation of concurrency restrictions between distinct courses. The schema lacks a dedicated mechanism for such concurrency prohibitions, making this part of the requirement unrepresentable in a structured and unambiguous manner.",
    "timestamp": "2025-07-04T06:07:44.029Z"
  },
  {
    "department": "CRIM",
    "number": "402",
    "reason": "Ambiguity issue: - The schema does not support specifying temporal restrictions for credit conflicts. The text \"in the summer 2000 or 2001 term\" cannot be represented.",
    "timestamp": "2025-07-04T06:07:47.130Z"
  },
  {
    "department": "CRIM",
    "number": "405",
    "reason": "Ambiguity issue: Requirements cannot be clearly represented",
    "timestamp": "2025-07-04T06:07:53.519Z"
  },
  {
    "department": "CRIM",
    "number": "406",
    "reason": "Ambiguity issue: The schema does not support temporal restrictions on credit conflicts, such as specifying particular semesters when a previous course was taken.\n\"Students who have taken CRIM 416 in Fall 2017 or Fall 2018, CRIM 319 in Spring 2018, under the title \"Family Violence & Criminal Justice\" may not take this course for further credit.\"",
    "timestamp": "2025-07-04T06:07:59.581Z"
  },
  {
    "department": "CRIM",
    "number": "459",
    "reason": "Ambiguity issue: - The schema does not support specifying dates or semesters for credit conflicts. The text \"Students with credit for CRIM 416 in Spring 2009 or CRIM 313 in Fall 2009 may not take this course for further credit\" includes temporal information that cannot be captured.",
    "timestamp": "2025-07-04T06:08:06.389Z"
  },
  {
    "department": "CRIM",
    "number": "470",
    "reason": "Ambiguity issue: - The requirement \"Written application to the school no later than the last day of classes of the preceding term\" includes a temporal constraint (a deadline) that cannot be clearly and unambiguously represented by the provided schema. While the existence of an application could be noted using `RequirementPermission` or `RequirementOther`, the schema lacks a specific field to capture the deadline itself.",
    "timestamp": "2025-07-04T06:08:14.766Z"
  },
  {
    "department": "CRIM",
    "number": "480",
    "reason": "Ambiguity issue: - The schema does not support specifying temporal constraints (like semesters) for credit conflicts. The note \"Students who have taken CRIM 416/417/418 under the topic in Spring 2010 may not take this course for further credit\" includes the phrase \"in Spring 2010\", which cannot be captured by the `credit_conflicts` structure.",
    "timestamp": "2025-07-04T06:08:22.800Z"
  },
  {
    "department": "CRIM",
    "number": "487",
    "reason": "Ambiguity issue: The phrase \"and/or permission of the school\" within the prerequisites creates ambiguity. The schema requires a clear logical operator (like AND or OR) to combine requirements. The term \"and/or\" does not definitively specify whether permission is required in addition to the other prerequisites (implying an AND relationship) or as an alternative to them (implying an OR relationship). This prevents unambiguous representation of the logical structure for the prerequisite section.",
    "timestamp": "2025-07-04T06:08:33.518Z"
  },
  {
    "department": "CRIM",
    "number": "489",
    "reason": "Ambiguity issue: The phrase \"A criminal record check may be required dependent on agency\" is not a clear, definite requirement. It describes a potential, conditional requirement (\"may be required\", \"dependent on agency\"), which cannot be unambiguously mapped to the schema's structured requirement types designed for definite conditions. While it could be placed in a `RequirementOther` field, its inherent vagueness makes the overall set of *requirements* ambiguous in terms of what constitutes a parseable, definite requirement.",
    "timestamp": "2025-07-04T06:08:47.132Z"
  },
  {
    "department": "CRIM",
    "number": "897",
    "reason": "Ambiguity issue: - The schema does not provide a specific type to clearly represent a requirement about \"completion of all coursework within a program.\" The `RequirementProgram` type is defined only by a `program: string;` field, which is too generic to unambiguously capture this specific academic milestone or status. Therefore, this requirement cannot be structured clearly within the schema and would have to be relegated to a generic `RequirementOther` type, indicating a lack of specific schema support for this common type of prerequisite. The specific text causing the ambiguity is: \"Completion of all course work within the PhD program.\"",
    "timestamp": "2025-07-04T06:09:12.125Z"
  },
  {
    "department": "DIAL",
    "number": "390W",
    "reason": "Ambiguity issue: - The prerequisite section contains complex information about program structures that cannot be unambiguously represented by the schema. Specifically, the text: \"Students can be accepted into either the Summer Institute in Dialogue (DIAL 390W and 391W, 10 units) or the Semester in Dialogue (fall or spring term, DIAL 390W, 391W and 392W, 15 units), but not both.\" presents several issues:\n1.  **Schema Support:** The schema's `RequirementProgram` type only accepts a program name as a string. It does not support detailing program structures, including specific course combinations (DIAL 390W, 391W, 392W) or unit counts (10 units, 15 units) within a program description that serves as a prerequisite.\n2.  **Unsupported Temporal Information:** The phrase \"(fall or spring term)\" is a temporal constraint that the schema explicitly states is not supported.\n3.  **Unclear Prerequisite Nature:** It is unclear if this describes a prerequisite for DIAL 390W itself, or rather how DIAL 390W fits into larger program structures. The phrasing \"Students can be accepted into either... but not both\" suggests a choice between program pathways, which is not a standard academic prerequisite format that the schema is designed to parse.\n\nWhile \"45 units\" and the credit conflict for \"DIAL 393\" are clearly representable, the ambiguity in the program structure description makes the overall requirements ambiguous.",
    "timestamp": "2025-07-04T06:09:21.078Z"
  },
  {
    "department": "DIAL",
    "number": "391W",
    "reason": "Ambiguity issue: The prerequisite section contains a self-referential requirement that cannot be unambiguously represented. The text \"Students can be accepted into either the Summer Institute in Dialogue (DIAL 390W and 391W, 10 units) or the Semester in Dialogue (fall or spring semester, DIAL 390W, 391W and 392W, 15 units) but not both\" lists DIAL 391W as a component of the prerequisite programs, meaning the course is listed as a prerequisite for itself. This creates a contradictory and unparsable condition. Furthermore, the schema does not support defining complex program-based prerequisites that consist of multiple courses and units, nor does it support the \"fall or spring semester\" constraint mentioned in the text.",
    "timestamp": "2025-07-04T06:09:30.479Z"
  },
  {
    "department": "DIAL",
    "number": "392W",
    "reason": "Ambiguity issue: The primary ambiguity lies in the phrase \"Students should apply prior to the term in which they wish to enroll.\" The schema does not have a specific type for an \"application\" requirement. While `RequirementPermission` or `RequirementOther` could be used, the vagueness of \"apply\" and the lack of detail on what constitutes an application make it difficult to represent unambiguously.\n\nAdditionally, the description of program acceptance (\"Students can be accepted into either the Summer Institute in Dialogue... or the Semester in Dialogue...\") is contextual information about program structure rather than a direct prerequisite for DIAL 392W itself, beyond the stated \"45 units.\" The schema is designed for direct prerequisites, not for complex program eligibility rules that might indirectly influence course enrollment.\n\nThe phrase \"prior to the term\" relates to timing, but the known data issue specifically mentions \"completing a prerequisite during a specific semester,\" which is not directly applicable here as it refers to an application process, not course completion. However, the general lack of schema support for application processes and the vagueness of the term \"apply\" create the ambiguity.",
    "timestamp": "2025-07-04T06:11:27.436Z"
  },
  {
    "department": "EASC",
    "number": "305",
    "reason": "Ambiguity issue: - The requirement \"six units in any 200-division or higher EASC courses\" cannot be unambiguously represented. The `creditCount` schema type's `level` field only accepts a single value from a predefined set ('1XX', '2XX', '3XX', '4XX', 'LD', 'UD'). It does not support specifying a range of levels such as \"200-division or higher,\" which would encompass '2XX', '3XX', and '4XX' levels.",
    "timestamp": "2025-07-04T06:11:35.453Z"
  }
]